package com.yst.tianyimember.fragment;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.TextView;

import com.scwang.smartrefresh.layout.SmartRefreshLayout;
import com.scwang.smartrefresh.layout.api.RefreshLayout;
import com.scwang.smartrefresh.layout.listener.OnLoadmoreListener;
import com.scwang.smartrefresh.layout.listener.OnRefreshListener;
import com.yst.tianyimember.R;
import com.yst.tianyimember.TianyiApplication;
import com.yst.tianyimember.activity.NewDetailActivity;
import com.yst.tianyimember.adapter.HomeShareAdapter;
import com.yst.tianyimember.base.BaseFragment;
import com.yst.tianyimember.bean.consult.ConsultListBean;
import com.yst.tianyimember.callbacks.AbstractConsultListCallback;
import com.yst.tianyimember.config.Constants;
import com.yst.tianyimember.eventbus.RefreshSearchEvent;
import com.yst.tianyimember.utils.JumpIntent;
import com.yst.tianyimember.utils.MyLog;
import com.yst.tianyimember.utils.SignUtils;
import com.yst.tianyimember.utils.ToastUtils;
import com.yst.tianyimember.utils.Utils;
import com.zhy.http.okhttp.OkHttpUtils;

import org.greenrobot.eventbus.EventBus;
import org.greenrobot.eventbus.Subscribe;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import okhttp3.Call;
import okhttp3.Request;

/**
 * 首页资讯
 *
 * @author luxuchang
 * @version 3.2.1
 * @date 2017/9/21.
 */
public class SearchInformationContentFragment extends BaseFragment {
    /**
     * 搜索创建
     */
    public static final int TYPE_SEARCH = 2;
    /**
     * 服务专员咨询列表
     */
    public static final int TYPE_SERVER_MEMBER = 3;
    private HomeShareAdapter adapter;
    private List<ConsultListBean.ContentBean.ContentListBean> datas = new ArrayList<>();
    private int pageNum = 1;
    private int rows = 10;
    /**
     * 搜索的关键字
     */
    private String searchText;
    private boolean isRefresh = true;

    @BindView(R.id.empty)
    TextView empty;
    @BindView(R.id.lv_information)
    ListView lvInformation;
    @BindView(R.id.smartRefreshLayout)
    SmartRefreshLayout smartRefreshLayout;


    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EventBus.getDefault().register(this);
        Bundle bundle = getArguments();
        if (bundle != null) {
            searchText = bundle.containsKey("searchText") ? bundle.get("searchText").toString() : "";
        }
        if (empty != null) {
            empty.setVisibility(View.GONE);
        }
    }

    @Override
    public int bindLayout() {
        return R.layout.fragment_infomation_content;
    }

    @Override
    public void initData() {
        if (datas != null) {
            datas.clear();
        }
        smartRefreshLayout.autoRefresh(200);
        smartRefreshLayout.setOnRefreshListener(new OnRefreshListener() {
            @Override
            public void onRefresh(RefreshLayout refreshlayout) {
                pageNum = 1;
                isRefresh = true;
                if (datas != null) {
                    datas.clear();
                }
                adapter.notifyDataSetChanged();
                datas.clear();
                getSearchData(searchText);
            }
        });
        smartRefreshLayout.setOnLoadmoreListener(new OnLoadmoreListener() {
            @Override
            public void onLoadmore(RefreshLayout refreshlayout) {
                if (datas.size() < 1) {
                    pageNum = 1;
                } else {
                    pageNum++;
                }
                isRefresh = false;
                getSearchData(searchText);
            }
        });
        getSearchData(searchText);

        adapter = new HomeShareAdapter(getActivity(), datas);
        lvInformation.setAdapter(adapter);
        lvInformation.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                if (!Utils.isClickable()) {
                    return;
                }
                Bundle bundle = new Bundle();
                bundle.putString("id", String.valueOf(datas.get(position).getId()));
                JumpIntent.jump(getActivity(), NewDetailActivity.class, bundle);
            }
        });
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        EventBus.getDefault().unregister(this);
    }

    @Subscribe
    public void onEventMainThread(RefreshSearchEvent event) {
        MyLog.e("@@@@", "RefreshSearchEvent==111111=");
        datas.clear();
        searchText = event.getMsg();
        pageNum = 1;
        getSearchData(searchText);
    }

    /**
     * 获取搜索咨询列表
     *
     * @param searchText 关键字
     */
    private void getSearchData(String searchText) {
        String timestamp = SignUtils.getTimeStamp();
        String sign = Utils.getSign(
                "page", String.valueOf(pageNum),
                "rows", String.valueOf(rows),
                "title", searchText,
                "flag", "0",
                "timestamp", timestamp);

        OkHttpUtils.post().url(Constants.GET_HOME_CONSULT_LIST)
                .addParams("page", String.valueOf(pageNum))
                .addParams("rows", String.valueOf(rows))
                .addParams("title", searchText)
                .addParams("flag", "0")
                .addParams("client_type", "A")
                .addParams("timestamp", timestamp)
                .addParams("sign", sign)
                .build().execute(new AbstractConsultListCallback() {

            @Override
            public void onBefore(Request request, int id) {
                super.onBefore(request, id);
                if (isRefresh) {
                    if (datas != null) {
                        datas.clear();
                    }
                }
            }

            @Override
            public void onAfter(int id) {
                super.onAfter(id);
                if (isRefresh) {
                    smartRefreshLayout.finishRefresh(500);
                } else {
                    smartRefreshLayout.finishLoadmore(1000);
                }
            }

            @Override
            public void onError(Call call, Exception e, int id) {
                ToastUtils.show(TianyiApplication.getInstance().getResources().getString(R.string.str_net_error_message));
            }

            @Override
            public void onResponse(ConsultListBean consultListBean, int id) {
                if(consultListBean.getContent() != null && consultListBean.getContent().getConsultationInfoList() != null){
                    List<ConsultListBean.ContentBean.ContentListBean> consultationInfoList = consultListBean.getContent().getConsultationInfoList();
                    if (pageNum == 1 && consultationInfoList.size() < 1) {
                        empty.setText("没有找到相关资讯");
                        empty.setVisibility(View.VISIBLE);
                    } else {
                        empty.setVisibility(View.GONE);
                    }
                    datas.addAll(consultationInfoList);
                    adapter.notifyDataSetChanged();
                }
            }
        });
    }

}
