package com.yst.onecity.fragment.popfragment;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.DialogFragment;
import android.text.TextUtils;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.WindowManager;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.scwang.smartrefresh.layout.SmartRefreshLayout;
import com.scwang.smartrefresh.layout.api.RefreshLayout;
import com.scwang.smartrefresh.layout.listener.OnRefreshLoadmoreListener;
import com.yst.onecity.R;
import com.yst.onecity.TianyiApplication;
import com.yst.onecity.activity.login.LoginActivity;
import com.yst.onecity.adapter.AbstractCommonAdapter;
import com.yst.onecity.adapter.CommonViewHolder;
import com.yst.onecity.bean.PxVideoBean;
import com.yst.onecity.bean.PxVideoCommentBean;
import com.yst.onecity.callbacks.AbstractPxVideoCommentCallback;
import com.yst.onecity.config.Const;
import com.yst.onecity.config.Constants;
import com.yst.onecity.dialog.SendCommentDialog;
import com.yst.onecity.utils.ConstUtils;
import com.yst.onecity.utils.JumpIntent;
import com.yst.onecity.utils.MyLog;
import com.yst.onecity.utils.RxCode;
import com.yst.onecity.utils.SignUtils;
import com.yst.onecity.utils.ToastUtils;
import com.yst.onecity.utils.Utils;
import com.yst.onecity.utils.WindowUtils;
import com.yst.onecity.view.GlideCircleTransform;
import com.yst.onecity.view.roundedimageview.RoundedImageView;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.StringCallback;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.Unbinder;
import gorden.rxbus2.RxBus;
import okhttp3.Call;

/**
 * 品秀商品在线评论列表
 *
 * @author WangJingWei
 * @version 4.2.0
 * @date 2018/6/2.
 */
public class PxOnLineCommentDialog extends DialogFragment {

    @BindView(R.id.listview)
    ListView listview;
    @BindView(R.id.mSmartRefresh)
    SmartRefreshLayout mSmartRefresh;
    @BindView(R.id.img_empty)
    ImageView imgEmpty;
    @BindView(R.id.tv_comment)
    TextView tvComment;
    @BindView(R.id.iv_close)
    ImageView ivClose;
    @BindView(R.id.tv_comment_num)
    TextView tvCommentNum;

    private Unbinder unbinder;
    private String showId;
    private int page = 1;
    private int row = 10;
    private List<PxVideoCommentBean.ContentBean> mCommentData = new ArrayList<>();
    private AbstractCommonAdapter<PxVideoCommentBean.ContentBean> onLineAdapter;

    private SendCommentDialog editDialog;
    private PxVideoBean.ContentBean contentBean = new PxVideoBean.ContentBean();

    public static PxOnLineCommentDialog newInstance(String videoId) {
        PxOnLineCommentDialog fragment = new PxOnLineCommentDialog();
        Bundle bundle = new Bundle();
        bundle.putString("showId", videoId);
        fragment.setArguments(bundle);
        return fragment;
    }

    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, Bundle savedInstanceState) {
        Window window = getDialog().getWindow();
        getDialog().setCanceledOnTouchOutside(true);
        View view = inflater.inflate(R.layout.fragment_px_video_onlinecomment, ((ViewGroup) window.findViewById(android.R.id.content)), false);
        window.setBackgroundDrawableResource(R.color.transparent);
        WindowManager.LayoutParams wlp = window.getAttributes();
        wlp.gravity = Gravity.BOTTOM;
        wlp.width = WindowManager.LayoutParams.MATCH_PARENT;
        wlp.height = (int) (WindowUtils.getScreenHeight(getActivity()) * 0.7);
        window.setAttributes(wlp);
        window.setWindowAnimations(R.style.add_cart_pop_anim_style);
        unbinder = ButterKnife.bind(this, view);
        return view;
    }

    @Override
    public void onActivityCreated(Bundle savedInstanceState) {
        page = 1;
        mCommentData.clear();
        Bundle bundle = getArguments();
        if (bundle != null) {
            showId = bundle.getString("showId");
        }
        MyLog.e("sss", "----- groupId" + showId);
        initListener();
        initOnLineNum();
        requestOnLineNum();

        super.onActivityCreated(savedInstanceState);
    }

    /**
     * 初始化组件监听事件
     */
    private void initListener() {
        mSmartRefresh.setOnRefreshLoadmoreListener(new OnRefreshLoadmoreListener() {
            @Override
            public void onLoadmore(RefreshLayout refreshlayout) {
                page++;
                requestOnLineNum();
                mSmartRefresh.finishLoadmore(1000);
            }

            @Override
            public void onRefresh(RefreshLayout refreshlayout) {
                page = 1;
                mCommentData.clear();
                requestOnLineNum();
                mSmartRefresh.finishRefresh(500);
            }
        });

        tvComment.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (!TianyiApplication.isLogin) {
                    JumpIntent.jump(getActivity(), LoginActivity.class);
                    return;
                }

                if (editDialog == null) {
                    editDialog = SendCommentDialog.creat(new SendCommentDialog.OnSendListener() {
                        @Override
                        public void editSend(String comment, EditText etComment) {
                            toCommentPx(comment);
                        }
                    }, 0);
                }
                editDialog.show(getFragmentManager());
            }
        });

        ivClose.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                dismiss();
            }
        });
    }


    /**
     * 请求评论人数列表接口
     */
    private void requestOnLineNum() {
        String timestamp = SignUtils.getTimeStamp();
        String sign = Utils.getSign(
                "page", String.valueOf(page),
                "row", String.valueOf(row),
                "timestamp", timestamp,
                "showId", showId
        );

        if (TextUtils.isEmpty(sign)) {
            return;
        }

        OkHttpUtils
                .post()
                .url(Constants.VIDEO_PX_COMMMENT_LIST)
                .addParams("showId", showId)
                .addParams("page", String.valueOf(page))
                .addParams("row", String.valueOf(row))
                .addParams("sign", sign)
                .addParams("timestamp", timestamp)
                .addParams("client_type", "A")
                .build().execute(new AbstractPxVideoCommentCallback() {

            @Override
            public void onError(Call call, Exception e, int id) {
                ToastUtils.show(TianyiApplication.getInstance().getString(R.string.str_net_error_message));
            }

            @Override
            public void onResponse(PxVideoCommentBean response, int id) {
                if (response.getCode() == 1) {
                    if (response.getContent() != null && response.getContent().size() > 0) {
                        mCommentData.addAll(response.getContent());
                    } else {
                        ToastUtils.show("暂无更多数据");
                    }

                    if (imgEmpty != null && tvCommentNum != null) {
                        if (mCommentData.size() > 0) {
                            imgEmpty.setVisibility(View.GONE);
                            tvCommentNum.setText(mCommentData.size() + "条评论");
                        } else {
                            imgEmpty.setVisibility(View.VISIBLE);
                            tvCommentNum.setText("0条评论");
                        }
                    }
                    
                    contentBean.setCommentNum(mCommentData.size());
                    onLineAdapter.notifyDataSetChanged();
                    RxBus.get().send(RxCode.CODE_PX_COMMENT,contentBean);
                }
            }
        });
    }

    /**
     * 品秀视频评论接口
     */
    private void toCommentPx(String content) {
        String timestamp = SignUtils.getTimeStamp();
        String sign = Utils.getSign(
                "phone", TianyiApplication.appCommonBean.getPhone(),
                "uuid", TianyiApplication.appCommonBean.getUuid(),
                "startNum", "5",
                "content", content,
                "timestamp", timestamp,
                "showId", showId
        );

        if (TextUtils.isEmpty(sign)) {
            return;
        }

        OkHttpUtils
                .post()
                .url(Constants.VIDEO_PX_COMMENT_LIST_TOCOMMENT)
                .addParams("showId", showId)
                .addParams("phone", TianyiApplication.appCommonBean.getPhone())
                .addParams("uuid", TianyiApplication.appCommonBean.getUuid())
                .addParams("content", content)
                .addParams("startNum", "5")
                .addParams("sign", sign)
                .addParams("timestamp", timestamp)
                .addParams("client_type", "A")
                .build().execute(new StringCallback() {
            @Override
            public void onError(Call call, Exception e, int id) {
                ToastUtils.show(getString(R.string.str_net_error_message));
            }

            @Override
            public void onResponse(String response, int id) {
                MyLog.e("sss","品秀视频评论接口:"+response);
                try {
                    JSONObject jsonObject = new JSONObject(response);
                    if (jsonObject != null && jsonObject.getInt(Const.CONS_STR_CODE) == Const.INTEGER_1) {
                        ToastUtils.show(jsonObject.getString(Const.CONS_STR_MESSAGE));
                        page = 1;
                        mCommentData.clear();

                        requestOnLineNum();
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        });
    }

    /**
     * 初始化在线人数列表
     */
    private void initOnLineNum() {
        onLineAdapter = new AbstractCommonAdapter<PxVideoCommentBean.ContentBean>(TianyiApplication.instance, mCommentData, R.layout.item_px_onlinenum) {
            @Override
            public void convert(CommonViewHolder holder, int position, PxVideoCommentBean.ContentBean item) {
                holder.setText(R.id.tv_name, ConstUtils.getStringNoEmpty(item.getNickname()));
                holder.setText(R.id.tv_time, ConstUtils.getStringNoEmpty(item.getReturnTime()));
                holder.setText(R.id.tv_desc, ConstUtils.getStringNoEmpty(item.getContent()));

                RoundedImageView imageView = holder.getView(R.id.iv_head);
                Glide.with(TianyiApplication.getInstance())
                        .load(ConstUtils.matchingImageUrl(ConstUtils.getStringNoEmpty(item.getHeadImg())))
                        .asBitmap()
                        .transform(new GlideCircleTransform(context))
                        .error(R.mipmap.iv_default_class)
                        .into(imageView);
            }
        };

        listview.setAdapter(onLineAdapter);
    }

    public void setPxData(PxVideoBean.ContentBean mContentBean){
        this.contentBean = mContentBean;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        unbinder.unbind();
    }
}
