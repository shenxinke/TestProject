package com.yst.onecity.activity.commissioner;

import android.Manifest;
import android.content.Intent;
import android.databinding.DataBindingUtil;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.text.TextUtils;
import android.view.View;

import com.bumptech.glide.Glide;
import com.google.gson.Gson;
import com.gyf.barlibrary.ImmersionBar;
import com.yst.onecity.R;
import com.yst.onecity.TianyiApplication;
import com.yst.onecity.bean.AdressBean;
import com.yst.onecity.bean.CodeMsgBean;
import com.yst.onecity.bean.UploadHeadBean;
import com.yst.onecity.callbacks.AbstractCodeMsgCallback;
import com.yst.onecity.config.Const;
import com.yst.onecity.config.Constants;
import com.yst.onecity.databinding.ActivityBaseInfo1Binding;
import com.yst.onecity.dialog.AbstractCameraDialog;
import com.yst.onecity.fragment.AddressDiaFragment;
import com.yst.onecity.utils.CircleTransFrom;
import com.yst.onecity.utils.ImagesUitls;
import com.yst.onecity.utils.InputTextWatcher;
import com.yst.onecity.utils.JumpIntent;
import com.yst.onecity.utils.MyLog;
import com.yst.onecity.utils.SignUtils;
import com.yst.onecity.utils.ToastUtils;
import com.yst.onecity.utils.Utils;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.StringCallback;

import java.io.File;
import java.util.List;

import gorden.rxbus2.RxBus;
import gorden.rxbus2.Subscribe;
import gorden.rxbus2.ThreadMode;
import me.nereo.multi_image_selector.MultiImageSelector;
import me.nereo.multi_image_selector.MultiImageSelectorActivity;
import okhttp3.Call;
import okhttp3.Request;
import pub.devrel.easypermissions.EasyPermissions;

import static com.yst.onecity.fragment.MyFragment.PHOTO_REQUEST_CUT;
import static com.yst.onecity.fragment.MyFragment.REQUEST_CAMERA;
import static com.yst.onecity.fragment.MyFragment.REQUEST_IMAGE;

/**
 * 基本信息
 *
 * @author wuxiaofang
 * @version 4.2.0
 * @date 2018/6/2
 */

public class BaseInfoAtivity extends AppCompatActivity {

    private ActivityBaseInfo1Binding binding;
    private AbstractCameraDialog cameraDialog;
    private String cipPath;
    private String tempPath;
    private String logoAttachmentId = "";
    private String provinceId;
    private String cityId;
    private String districtId;
    private String nickName;
    private String oneWorld;
    private String simpleIntro;
    private String serviceArea;
    private String hunterId;
    private String uploadHeadBeanAddress;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (Build.VERSION.SDK_INT < Const.INTEGER_23) {
            ImmersionBar.with(this).fitsSystemWindows(true).statusBarColor(R.color.white).statusBarAlpha(0.2f).init();
        } else if (Build.VERSION.SDK_INT >= Const.INTEGER_23) {
            ImmersionBar.with(this).fitsSystemWindows(true).statusBarDarkFont(true).statusBarColor(R.color.white).init();
        }
        RxBus.get().register(this);
        binding = DataBindingUtil.setContentView(this, R.layout.activity_base_info1);
        binding.setMyHandler(new MyHandler());
        binding.edOneWord.addTextChangedListener(new InputTextWatcher(Const.INTEGER_20, binding.etNickName, this, binding.tvNoPut));
        if (null != getIntent() && null != getIntent().getExtras()) {
            Bundle extras = getIntent().getExtras();
            if (!getIntent().getExtras().containsKey("headId") ||
                    !getIntent().getExtras().containsKey("nickName") ||
                    !getIntent().getExtras().containsKey("oneWorld") ||
                    !getIntent().getExtras().containsKey("simpleIntro") ||
                    !getIntent().getExtras().containsKey("provinceId") ||
                    !getIntent().getExtras().containsKey("cityId") ||
                    !getIntent().getExtras().containsKey("hunterId") ||
                    !getIntent().getExtras().containsKey("districtId") ||
                    !getIntent().getExtras().containsKey("serviceArea")) {
                return;
            }
            logoAttachmentId = extras.getString("headId");
            nickName = extras.getString("nickName");
            oneWorld = extras.getString("oneWorld");
            simpleIntro = extras.getString("simpleIntro");
            provinceId = extras.getString("provinceId");
            cityId = extras.getString("cityId");
            hunterId = extras.getString("hunterId");
            districtId = extras.getString("districtId");
            serviceArea = extras.getString("serviceArea");
            if (!TextUtils.isEmpty(binding.etNickName.getText().toString())) {
                binding.etNickName.setText(nickName);
                binding.etNickName.setSelection(nickName.length());
            }
            if (TextUtils.isEmpty(oneWorld)) {
                binding.edOneWord.setText("天易服务专员为您服务");
            } else {
                binding.edOneWord.setText(oneWorld);
            }
            if (TextUtils.isEmpty(oneWorld)) {
                binding.tvIntro.setText("这个人很懒，什么都没有留下~");
            } else {
                binding.tvIntro.setText(simpleIntro);
            }
            binding.tvServiceRange.setText(serviceArea);
            Glide.with(TianyiApplication.getInstance()).load(TianyiApplication.appCommonBean.getAddress()).transform(new CircleTransFrom(TianyiApplication.getInstance())).into(binding.ivHead);
        }
    }

    /**
     * 事件监听
     */
    public class MyHandler {
        /**
         * 个人简介
         *
         * @param view 控件view
         */
        public void onViewClick(View view) {
            JumpIntent.jump(BaseInfoAtivity.this, SimpleIntroActivity.class, Const.INTEGER_0);
        }


        /**
         * 选择服务范围
         *
         * @param view 控件view
         */
        public void onServiceClick(View view) {
            AddressDiaFragment diaFragment = new AddressDiaFragment();
            diaFragment.show(getSupportFragmentManager(), "service");
        }

        /**
         * 完成提交
         *
         * @param view 控件view
         */
        public void onViewComplete(View view) {
            completeEditNet();
        }

        /**
         * 返回
         *
         * @param view 控件view
         */
        public void onViewBack(View view) {
            finish();
        }

        /**
         * 点击头像
         *
         * @param view 控件view
         */
        public void onViewHead(View view) {
            if (!EasyPermissions.hasPermissions(BaseInfoAtivity.this, Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.READ_EXTERNAL_STORAGE)) {
                EasyPermissions.requestPermissions(BaseInfoAtivity.this, getString(R.string.hunter_center_open_camera_permission), 300,
                        Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.READ_EXTERNAL_STORAGE);
            }
            showChooseDialog();
        }
    }

    /**
     * 选择照片
     */
    private void showChooseDialog() {
        cameraDialog = new AbstractCameraDialog(this) {
            @Override
            public void onCameraClick() {
                picByCamera();
            }

            @Override
            public void onPhotoClick() {
                selectImg();
            }
        };
        cameraDialog.showDialog();
    }

    @Subscribe(code = Const.INTEGER_0, threadMode = ThreadMode.MAIN)
    public void getInfo(AdressBean adressBean) {
        MyLog.e("sss", "-address: " + adressBean);
        provinceId = adressBean.getProvinceId();
        cityId = adressBean.getCityId();
        districtId = adressBean.getDistrictId();
        if (Const.provinceState == Const.INTEGER_1 && Const.cityState == Const.INTEGER_1 && Const.districtState == Const.INTEGER_0) {
            binding.tvServiceRange.setText(adressBean.getProvince() + "-" + adressBean.getCity());
        } else if (Const.provinceState == Const.INTEGER_1 && Const.cityState == Const.INTEGER_0 && Const.districtState == Const.INTEGER_0) {
            binding.tvServiceRange.setText(adressBean.getProvince());
        } else if (Const.provinceState == Const.INTEGER_0 && Const.cityState == Const.INTEGER_0 && Const.districtState == Const.INTEGER_0) {
            binding.tvServiceRange.setText("");
        } else if (Const.provinceState == Const.INTEGER_1 && Const.cityState == Const.INTEGER_1 && Const.districtState == Const.INTEGER_1) {
            binding.tvServiceRange.setText(adressBean.getProvince() + "-" + adressBean.getCity() + "-" + adressBean.getDistrict());
        }
        Const.districtState = Const.INTEGER_0;
        Const.provinceState = Const.INTEGER_0;
        Const.cityState = Const.INTEGER_0;
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        RxBus.get().unRegister(this);
    }

    /**
     * 拍照
     */
    protected void picByCamera() {
        tempPath = System.currentTimeMillis() + ".png";
        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
        intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(new File(
                Environment.getExternalStorageDirectory(), tempPath)));
        startActivityForResult(intent, REQUEST_CAMERA);
    }

    /**
     * 选择图片
     */
    private void selectImg() {
        MultiImageSelector.create().single().showCamera(false).start(this, REQUEST_IMAGE);
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case REQUEST_IMAGE:
                if (null != data) {
                    List<String> list = data.getStringArrayListExtra(MultiImageSelectorActivity.EXTRA_RESULT);
                    if (list.size() > 0) {
                        startPhotoZoom(Uri.fromFile(new File(list.get(0))));
                    }
                }

                break;
            case REQUEST_CAMERA:
                Uri photoUri = Uri.fromFile(new File(Environment.getExternalStorageDirectory(), tempPath));
                startPhotoZoom(photoUri);
                break;
            case PHOTO_REQUEST_CUT:
                Uri clipPhotoUri = Uri.fromFile(new File(Environment.getExternalStorageDirectory(), cipPath));
                File fileClip = ImagesUitls.getFileFromMediaUri(this, clipPhotoUri);
                if (null != fileClip && fileClip.exists()) {
                    upLoadImg(fileClip);
                    MyLog.e("sss", "--crop:" + fileClip.getAbsolutePath());
                }
                break;
            case Const.INTEGER_0:
                if (resultCode == Const.INTEGER_0) {
                    if (null != data) {
                        String intro = data.getStringExtra("intro");
                        MyLog.e("sss", "--" + intro);
                        binding.tvIntro.setText(intro);
                    }
                }

            default:
                break;
        }
    }

    /**
     * 专员上传头像
     *
     * @param mImageFile 专员头像
     */
    private void upLoadImg(File mImageFile) {
        OkHttpUtils.post()
                .url(Constants.SERVER_MEMBER_UPLOADHEAD)
                .addFile("urlfile", mImageFile.getName(), mImageFile)
                .build()
                .execute(new StringCallback() {
                    @Override
                    public void onBefore(Request request, int id) {
                        super.onBefore(request, id);
                    }

                    @Override
                    public void onAfter(int id) {
                        super.onAfter(id);
                    }

                    @Override
                    public void onError(Call call, Exception e, int id) {
                        ToastUtils.show(getResources().getString(R.string.app_on_request_error_msg));
                        MyLog.e("sss", "--BaseInfoAtivity_onError: " + e.getMessage());
                    }

                    @Override
                    public void onResponse(String s, int id) {
                        MyLog.e("sss", s);
                        if (null != s) {
                            UploadHeadBean uploadHeadBean = new Gson().fromJson(s, UploadHeadBean.class);
                            if (null != uploadHeadBean) {
                                if (uploadHeadBean.getCode() == Const.INTEGER_1) {
                                    ToastUtils.show(uploadHeadBean.getMsg());
                                    TianyiApplication.appCommonBean.setAddress(uploadHeadBean.getAddress());
                                    Glide.with(TianyiApplication.getInstance()).load(uploadHeadBean.getAddress()).transform(new CircleTransFrom(TianyiApplication.getInstance())).error(R.mipmap.head_2).into(binding.ivHead);
                                    logoAttachmentId = String.valueOf(uploadHeadBean.getId());
                                } else {
                                    ToastUtils.show(uploadHeadBean.getMsg());
                                }
                            }
                        }
                    }
                });
    }

    /**
     * 对选择的图片进行裁剪后展示
     *
     * @param uri 裁剪的图片url
     */
    private void startPhotoZoom(Uri uri) {
        Intent intent = new Intent("com.android.camera.action.CROP");
        intent.setDataAndType(uri, "image/*");
        intent.putExtra("crop", "true");
        intent.putExtra("aspectX", 1);
        intent.putExtra("aspectY", 1);
        intent.putExtra("outputX", 300);
        intent.putExtra("outputY", 300);
        cipPath = System.currentTimeMillis() + ".png";
        intent.putExtra("output", Uri.fromFile(new File(
                Environment.getExternalStorageDirectory(), cipPath)));
        intent.putExtra("outputFormat", "JPEG");
        startActivityForResult(intent, PHOTO_REQUEST_CUT);
    }


    /**
     * 完成编辑信息
     */
    private void completeEditNet() {
        if (TextUtils.isEmpty(logoAttachmentId)) {
            ToastUtils.show("头像id为空");
            return;
        }
        if (TextUtils.isEmpty(binding.etNickName.getText().toString())) {
            ToastUtils.show("昵称为空");
            return;
        }

        if (TextUtils.isEmpty(hunterId)) {
            ToastUtils.show("hunterId为空");
            return;
        }

        if (TextUtils.isEmpty(binding.edOneWord.getText().toString())) {
            binding.edOneWord.setText("天易服务专员为您服务");
        }
        if (TextUtils.isEmpty(binding.tvIntro.getText().toString())) {
            binding.tvIntro.setText("这个人很懒，什么都没有留下~");
        }
        if (TextUtils.isEmpty(binding.tvServiceRange.getText().toString())) {
            ToastUtils.show("请选择服务范围");
            return;
        }
        String timeStamp = SignUtils.getTimeStamp();
        String sign = Utils.getSign(
                "phone", TianyiApplication.appCommonBean.getPhone(),
                "uuid", TianyiApplication.appCommonBean.getUuid(),
                "hunterId", hunterId,
                "logoAttachmentId", logoAttachmentId,
                "serviceDigest", binding.edOneWord.getText().toString(),
                "description", binding.tvIntro.getText().toString(),
                "serviceArea", binding.tvServiceRange.getText().toString(),
                "phProvinceId", provinceId,
                "phCityId", cityId,
                "nickname", binding.etNickName.getText().toString(),
                "phCountyId", districtId,
                "timestamp", timeStamp);
        if (TextUtils.isEmpty(sign)) {
            return;
        }
        OkHttpUtils.post().url(Constants.UPDATE_TUIGUANGSHI_INFO)
                .addParams("phone", TianyiApplication.appCommonBean.getPhone())
                .addParams("uuid", TianyiApplication.appCommonBean.getUuid())
                .addParams("hunterId", hunterId)
                .addParams("logoAttachmentId", logoAttachmentId)
                .addParams("serviceDigest", binding.edOneWord.getText().toString())
                .addParams("description", binding.tvIntro.getText().toString())
                .addParams("serviceArea", binding.tvServiceRange.getText().toString())
                .addParams("phProvinceId", provinceId)
                .addParams("nickname", binding.etNickName.getText().toString())
                .addParams("phCityId", cityId)
                .addParams("phCountyId", districtId)
                .addParams("timestamp", timeStamp)
                .addParams("client_type", "A")
                .addParams("sign", sign)
                .build().execute(new AbstractCodeMsgCallback() {
            @Override
            public void onError(Call call, Exception e, int id) {
                ToastUtils.show(getString(R.string.str_net_error_message));
            }

            @Override
            public void onResponse(CodeMsgBean response, int id) {
                if (null != response) {
                    ToastUtils.show(response.getMsg());
                    if (response.getCode() == Const.INTEGER_1) {
                        finish();
                    }
                }
            }
        });
    }
}
