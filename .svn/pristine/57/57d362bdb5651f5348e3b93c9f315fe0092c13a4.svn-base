package com.yst.tianyimember.activity.servermember;

import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.tencent.TIMConversationType;
import com.yst.tianyimember.R;
import com.yst.tianyimember.TianyiApplication;
import com.yst.tianyimember.activity.ProductDetailActivity;
import com.yst.tianyimember.activity.chat.ChatActivity;
import com.yst.tianyimember.adapter.AbstractCommonAdapter;
import com.yst.tianyimember.adapter.CommonViewHolder;
import com.yst.tianyimember.base.BaseActivity;
import com.yst.tianyimember.bean.order.OnLineOrderDetailBean;
import com.yst.tianyimember.bean.order.OrderDetailBean;
import com.yst.tianyimember.bean.order.OrderProduct;
import com.yst.tianyimember.callbacks.AbstractOnLineDetailsCallBack;
import com.yst.tianyimember.config.Const;
import com.yst.tianyimember.config.Constants;
import com.yst.tianyimember.utils.ConstUtils;
import com.yst.tianyimember.utils.JumpIntent;
import com.yst.tianyimember.utils.SignUtils;
import com.yst.tianyimember.utils.ToastUtils;
import com.yst.tianyimember.utils.Utils;
import com.yst.tianyimember.view.MyListView;
import com.zhy.http.okhttp.OkHttpUtils;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import butterknife.OnClick;
import okhttp3.Call;
import okhttp3.Request;

/**
 * 服务专员线上订单详情
 *
 * @author Chenxiaowei
 * @version 3.2.1
 * @date 2017/12/18
 */
public class ServiceOnlineOrderDetailActivity extends BaseActivity {

    @BindView(R.id.scroll_view)
    ScrollView scrollView;
    @BindView(R.id.tv_order_status)
    TextView tvOrderStatus;
    @BindView(R.id.tv_user_name)
    TextView tvUserName;
    @BindView(R.id.tv_user_tel)
    TextView tvUserTel;
    @BindView(R.id.tv_user_address)
    TextView tvUserAddress;
    @BindView(R.id.listView)
    MyListView listView;
    @BindView(R.id.tv_info)
    TextView tvInfo;
    @BindView(R.id.tv_order_number)
    TextView tvOrderNumber;
    @BindView(R.id.tv_order_create)
    TextView tvOrderCreate;
    @BindView(R.id.tv_order_payment)
    TextView tvOrderPayment;
    @BindView(R.id.tv_order_send)
    TextView tvOrderSend;
    @BindView(R.id.tv_order_receipt)
    TextView tvOrderReceipt;
    @BindView(R.id.rl_pay_time)
    RelativeLayout rlPayTime;
    @BindView(R.id.rl_send_time)
    RelativeLayout rlSendTime;
    @BindView(R.id.rl_receive_time)
    RelativeLayout rlReceiveTime;
    @BindView(R.id.tv_status_time)
    TextView tvStatusTime;
    @BindView(R.id.tv_contact)
    TextView tvContact;
    private List<OrderProduct.ProductDetailBean> data = new ArrayList<>();
    private AbstractCommonAdapter<OrderProduct.ProductDetailBean> adapter;
    private int status;
    private String mImId;
    private String orderNo;
    private String merchantId;

    @Override
    public int bindLayout() {
        return R.layout.activity_service_online_order_detail;
    }

    @Override
    public void initData() {
        initTitleBar("订单详情");
        ConstUtils.disableAutoScrollToBottom(scrollView);
        status = getIntent().getExtras().getInt("status");
        mImId = getIntent().getExtras().getString("mImId");
        orderNo = getIntent().getExtras().getString("orderNo");
        merchantId = getIntent().getExtras().getString("merchantId");
        requestOrderDetailsNetWork();
    }

    /**
     * 获取服务专员线下订单详情
     */
    private void requestOrderDetailsNetWork() {
        String timestamp = SignUtils.getTimeStamp();
        String sign = Utils.getSign(
                "orderNo", orderNo,
                "merchantId", merchantId,
                "status", String.valueOf(status),
                "phone", TianyiApplication.appCommonBean.getPhone(),
                "uuid", TianyiApplication.appCommonBean.getUuid(),
                "timestamp", timestamp);
        //请求参数：主订单id、会员手机号、uuid
        OkHttpUtils.post().url(Constants.SERVER_ONLINE_ORDER_DETAIL)
                .addParams("orderNo", orderNo)
                .addParams("merchantId", merchantId)
                .addParams("status", String.valueOf(status))
                .addParams("phone", TianyiApplication.appCommonBean.getPhone())
                .addParams("uuid", TianyiApplication.appCommonBean.getUuid())
                .addParams("timestamp", timestamp)
                .addParams("client_type", "A")
                .addParams("sign", sign)
                .build().execute(new AbstractOnLineDetailsCallBack() {
            @Override
            public void onBefore(Request request, int id) {
                super.onBefore(request, id);
                showInfoProgressDialog();
            }

            @Override
            public void onAfter(int id) {
                super.onAfter(id);
                dismissInfoProgressDialog();
            }

            @Override
            public void onError(Call call, Exception e, int id) {
                ToastUtils.show(getString(R.string.app_on_request_error_msg));
            }

            @Override
            public void onResponse(OnLineOrderDetailBean response, int id) {
                if (response.getCode() == 1) {
                    setOrderInfo(response.getContent());
                    List<OrderProduct> products = response.getContent().getMerchantList();
                    if (products != null && products.size() != 0) {
                        for (int i = 0; i < products.size(); i++) {
                            data.addAll(products.get(i).getpList());
                        }
                        initCtrl(data);
                    }
                } else {
                    ToastUtils.show(response.getMsg());
                }
            }
        });
    }

    /**
     * 设置订单状态
     * @param data 订单信息
     */
    private void setOrderInfo(final OrderDetailBean data) {
        // 	订单状态码0待付款 1已支付 2待发货 3待收货 4已评价 5待评价 6已撤销 7已收货
        if (status == 0) {
            tvOrderStatus.setText("订单状态：待付款");
        } else if (status == Const.INTEGER_2) {
            tvOrderStatus.setText("订单状态：待发货");
            rlPayTime.setVisibility(View.VISIBLE);
            tvOrderPayment.setText(ConstUtils.getStringNoEmpty(data.getPayTime()));
        } else if (status == Const.INTEGER_3) {
            tvOrderStatus.setText("订单状态：待收货");
            rlPayTime.setVisibility(View.VISIBLE);
            rlSendTime.setVisibility(View.VISIBLE);
            tvOrderPayment.setText(ConstUtils.getStringNoEmpty(data.getPayTime()));
            tvOrderSend.setText(ConstUtils.getStringNoEmpty(data.getSendTime()));
        } else if (status == Const.INTEGER_4) {
            tvOrderStatus.setText("订单状态：已完成");
            rlPayTime.setVisibility(View.VISIBLE);
            rlReceiveTime.setVisibility(View.VISIBLE);
            tvOrderPayment.setText(ConstUtils.getStringNoEmpty(data.getPayTime()));
            tvStatusTime.setText("订单完成时间");
            tvOrderReceipt.setText(ConstUtils.getStringNoEmpty(data.getFinishTime()));
        } else if (status == Const.INTEGER_6) {
            tvOrderStatus.setText("订单状态：已撤销");
            rlPayTime.setVisibility(View.VISIBLE);
            rlReceiveTime.setVisibility(View.VISIBLE);
            tvContact.setBackgroundResource(R.drawable.shape_order_gray);
            tvContact.setText("已撤销");
            tvContact.setEnabled(false);
            tvStatusTime.setText("订单撤销时间");
            tvOrderReceipt.setText(ConstUtils.getStringNoEmpty(data.getCancelTime()));
            tvOrderPayment.setText(ConstUtils.getStringNoEmpty(data.getPayTime()));
        } else if (status == Const.INTEGER_7) {
            tvOrderStatus.setText("订单状态：待评价");
            rlPayTime.setVisibility(View.VISIBLE);
            rlSendTime.setVisibility(View.VISIBLE);
            rlReceiveTime.setVisibility(View.VISIBLE);
            tvOrderSend.setText(ConstUtils.getStringNoEmpty(data.getSendTime()));
            tvOrderPayment.setText(ConstUtils.getStringNoEmpty(data.getPayTime()));
            tvOrderReceipt.setText(ConstUtils.getStringNoEmpty(data.getReceiveTime()));
        }
        tvUserName.setText(ConstUtils.getStringNoEmpty(data.getReceiveName()));
        tvUserTel.setText(ConstUtils.getStringNoEmpty(data.getReceivePhone()));
        tvUserAddress.setText(ConstUtils.getStringNoEmpty(data.getReceiveAddress()));
        tvInfo.setText("共" + data.getTotalNum() + "件商品，合计：" + data.getTotalPrice()
                + "元(含运费0元) 分润金额：" + data.getSumScore());
        tvOrderNumber.setText(ConstUtils.getStringNoEmpty(data.getOrderNo()));
        tvOrderCreate.setText(ConstUtils.getStringNoEmpty(data.getCreateTime()));
        tvContact.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ChatActivity.navToChat(context, mImId, data.getiMid(), TIMConversationType.C2C);
            }
        });
    }

    /**
     * 初始化适配器
     * @param data 订单
     */
    public void initCtrl(List<OrderProduct.ProductDetailBean> data) {
        adapter = new AbstractCommonAdapter<OrderProduct.ProductDetailBean>(context, data, R.layout.order_info_item) {
            @Override
            public void convert(CommonViewHolder holder, int position, OrderProduct.ProductDetailBean item) {
                if (status == Const.INTEGER_4) {
                    holder.setVisiable(R.id.immediate_click, View.VISIBLE);
                }
                ImageView ivGoods = holder.getView(R.id.iv_goods);
                Glide.with(context).load(item.getpImg())
                        .placeholder(R.mipmap.img_default_p).error(R.mipmap.img_default_p).into(ivGoods);
                holder.setText(R.id.tv_goods_name, ConstUtils.getStringNoEmpty(item.getPame()));
                holder.setText(R.id.tv_goods_money, "¥" + item.getSalePrice());
                holder.setText(R.id.tv_goods_number, "x" + item.getNum());
                holder.setText(R.id.tv_goods_color, ConstUtils.getStringNoEmpty(item.getpContent()));
                holder.setText(R.id.tv_integral, "分润金额：" + item.getpScore());
            }
        };
        listView.setAdapter(adapter);
    }

    @Override
    public void setListener() {
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                Bundle bundle = new Bundle();
                bundle.putString("spid", String.valueOf(data.get(i).getPsId()));
                bundle.putString("merchantId", merchantId);
                bundle.putString("productId", data.get(i).getpId());
                bundle.putString("hunterId", data.get(i).gethId());
                JumpIntent.jump(ServiceOnlineOrderDetailActivity.this, ProductDetailActivity.class, bundle);
            }
        });
    }

    @OnClick(R.id.tv_ordernumber_copy)
    public void onViewClicked(View view) {
        ClipboardManager cm = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
        // 将文本内容放到系统剪贴板里。
        cm.setText(tvOrderNumber.getText());
        ToastUtils.show("复制成功");
    }
}
