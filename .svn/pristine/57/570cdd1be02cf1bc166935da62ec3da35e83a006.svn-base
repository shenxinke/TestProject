package com.yst.tianyimember.fragment;

import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.text.TextUtils;

import com.google.gson.Gson;
import com.scwang.smartrefresh.layout.SmartRefreshLayout;
import com.scwang.smartrefresh.layout.api.RefreshLayout;
import com.scwang.smartrefresh.layout.listener.OnRefreshLoadmoreListener;
import com.yst.tianyimember.R;
import com.yst.tianyimember.TianyiApplication;
import com.yst.tianyimember.activity.ProductDetailActivity;
import com.yst.tianyimember.activity.member.TrademarkActivity;
import com.yst.tianyimember.adapter.ShoppingMallAdapter;
import com.yst.tianyimember.adapter.TrademarkMallAdapter;
import com.yst.tianyimember.base.BaseFragment;
import com.yst.tianyimember.bean.ShoppingMallBean;
import com.yst.tianyimember.bean.TrademarkShoppingBean;
import com.yst.tianyimember.bean.product.ProductSortStandardBean;
import com.yst.tianyimember.config.Const;
import com.yst.tianyimember.config.Constants;
import com.yst.tianyimember.fragment.popfragment.AddCartPopFragment;
import com.yst.tianyimember.utils.ConstUtils;
import com.yst.tianyimember.utils.JumpIntent;
import com.yst.tianyimember.utils.MyLog;
import com.yst.tianyimember.utils.SignUtils;
import com.yst.tianyimember.utils.ToastUtils;
import com.yst.tianyimember.utils.Utils;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.StringCallback;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import okhttp3.Call;
import okhttp3.Request;

/**
 * 品牌商品页面
 *
 * @author Shenxinke
 * @version 4.2.0
 * @data 2018/6/5
 */

public class TrademarkMallFragment extends BaseFragment {

    private TrademarkMallAdapter shoppingMallAdapter;
    private List<TrademarkShoppingBean.ContentBean.ProductListBean> pList = new ArrayList<>();
    private int pageNum = 1;
    private int rows = 2;

    @BindView(R.id.recyclerView)
    RecyclerView rvInformation;
    @BindView(R.id.smartRefreshLayout)
    SmartRefreshLayout smartRefreshLayout;
    private String brandId;

    @Override
    public int bindLayout() {
        return R.layout.fragment_shopping_mall_item;
    }

    @Override
    public void initData() {
        brandId = TrademarkActivity.getBrandId();

        getBrandShoppingList();

        shoppingMallAdapter = new TrademarkMallAdapter();
        rvInformation.setLayoutManager(new LinearLayoutManager(getActivity(), LinearLayoutManager.VERTICAL, false));
        rvInformation.setAdapter(shoppingMallAdapter);
        shoppingMallAdapter.setTrademarkMallListener(new TrademarkMallAdapter.ShoppingMallListener() {
            @Override
            public void btShoppingCart(int position, String status) {
                if (!Utils.isClickable()) {
                    return;
                }
                getGuige(status, position);
            }

            @Override
            public void btShoppingStory(int position, String status) {
                Bundle bundle = new Bundle();
                bundle.putString("productId", String.valueOf(pList.get(position).getId()));
                bundle.putInt(Const.STR_STORY_INTENT,Const.INTEGER_3);
                JumpIntent.jump(getActivity(),ProductDetailActivity.class,bundle);
            }

            @Override
            public void onItemClick(int position) {
                Bundle bundle = new Bundle();
                bundle.putString("productId", String.valueOf(pList.get(position).getId()));
                JumpIntent.jump(getActivity(),ProductDetailActivity.class,bundle);
            }
        });

        initListener();
    }

    /**
     * 获取品牌商品信息
     */
    public void getBrandShoppingList() {
        String timestamp = SignUtils.getTimeStamp();
        String sign = Utils.getSign(
                "uuid", TianyiApplication.appCommonBean.getUuid(),
                "phone", TianyiApplication.appCommonBean.getPhone(),
                "memberid", TianyiApplication.appCommonBean.getId(),
                "brandId", brandId,
                "page", String.valueOf(pageNum),
                "rows", String.valueOf(rows),
                "type", String.valueOf(Const.STR0),
                "timestamp", timestamp);
        if (TextUtils.isEmpty(sign)) {
            return;
        }
        OkHttpUtils.post()
                .url(Constants.GET_BRAND_LIST)
                .addParams("uuid", TianyiApplication.appCommonBean.getUuid())
                .addParams("phone", TianyiApplication.appCommonBean.getPhone())
                .addParams("memberid", TianyiApplication.appCommonBean.getId())
                .addParams("brandId", brandId)
                .addParams("rows", String.valueOf(rows))
                .addParams("page", String.valueOf(pageNum))
                .addParams("type", Const.STR0)
                .addParams("client_type", "A")
                .addParams("sign", sign)
                .addParams("timestamp", timestamp)
                .build().execute(new StringCallback() {
                                     @Override
                                     public void onError(Call call, Exception e, int id) {
                                         ToastUtils.show(getString(R.string.tv_net_error));
                                     }

                                     @Override
                                     public void onBefore(Request request, int id) {
                                         super.onBefore(request, id);
                                         showInfoProgressDialog();
                                     }

                                     @Override
                                     public void onAfter(int id) {
                                         super.onAfter(id);
                                         dismissInfoProgressDialog();
                                     }

                                     @Override
                                     public void onResponse(String response, int id) {
                                         MyLog.e("sss", "-品牌商品Fragment: " + response);
                                         if (response != null) {
                                             TrademarkShoppingBean trademarkBean = new Gson().fromJson(response, TrademarkShoppingBean.class);
                                             if (trademarkBean.getCode() == Const.INTEGER_1) {
                                                 List<TrademarkShoppingBean.ContentBean.ProductListBean> productList = trademarkBean.getContent().getProductList();
                                                 pList.addAll(productList);
                                                 shoppingMallAdapter.addList(pList);
                                             } else {
                                                 ToastUtils.show(getString(R.string.tv_net_error));
                                             }
                                         } else {
                                             ToastUtils.show(getString(R.string.tv_net_error));
                                         }
                                     }
                                 }

        );
    }

    /**
     * 上拉加载下拉刷新
     */
    private void initListener() {
        smartRefreshLayout.setOnRefreshLoadmoreListener(new OnRefreshLoadmoreListener() {
            @Override
            public void onLoadmore(RefreshLayout refreshlayout) {
                pageNum++;
                getBrandShoppingList();
                smartRefreshLayout.finishLoadmore(1000);
            }

            @Override
            public void onRefresh(RefreshLayout refreshlayout) {
                pageNum = 1;
                if (pList != null) {
                    pList.clear();
                }
                getBrandShoppingList();
                smartRefreshLayout.finishRefresh(500);
            }
        });
    }

    /**
     * 获取商品规格
     */
    private void getGuige(final String pId, final int position) {
        final String productId = String.valueOf(pId);
        String timestamp = SignUtils.getTimeStamp();
        String sign = Utils.getSign("timestamp", timestamp,
                "pId", productId, "merchantid", Const.STR1);
        OkHttpUtils.post().url(Constants.GET_PRODUCT_SORT_STANDARD)
                .addParams("timestamp", timestamp)
                .addParams("pId", productId)
                .addParams("merchantid", Const.STR1)
                .addParams("client_type", "A")
                .addParams("sign", sign)
                .build().execute(new StringCallback() {
            @Override
            public void onError(Call call, Exception e, int id) {

            }

            @Override
            public void onResponse(String response, int id) {
                MyLog.e("sss", "-规格：" + response);
                if (response != null) {
                    ProductSortStandardBean standardBean = new Gson().fromJson(response, ProductSortStandardBean.class);
                    if (null != standardBean.getContent() && standardBean.getCode() == Const.INTEGER_1) {
                        if (standardBean.getContent().getStandard().size() > 1) {
                            showAddCartDialog(productId, Const.STR1);
                        } else {
                            int standardId = standardBean.getContent().getStandard().get(0).getStandardId();
                            int classId = standardBean.getContent().getClassify().get(0).getClassId();
                            addCart(Const.STR1, String.valueOf(standardId), String.valueOf(classId));
                        }
                    }
                } else {
                    ToastUtils.show(getString(R.string.tv_check_service));
                }
            }
        });
    }

    /**
     * 显示购物车弹框
     *
     * @param productId  商品id
     * @param merchantId merchantId
     */
    private void showAddCartDialog(String productId, String merchantId) {
        AddCartPopFragment popFragment = AddCartPopFragment.newInstance(productId, merchantId, "","","", "", "", "", "");
        popFragment.show(getFragmentManager(), "goodsFragment");
    }

    /**
     * 添加购物车
     */
    private void addCart(String num, String standardId, String classId) {
        String timestamp = SignUtils.getTimeStamp();
        String sign = Utils.getSign("timestamp", timestamp,
                "phone", TianyiApplication.appCommonBean.getPhone()
                , "uuid", TianyiApplication.appCommonBean.getUuid(),
                "spid", standardId,
                "stid", classId,
                "num", num,
                "hunterid", "");
        OkHttpUtils.post().url(Constants.ADD_SHOP_CART)
                .addParams("timestamp", timestamp)
                .addParams("phone", TianyiApplication.appCommonBean.getPhone())
                .addParams("uuid", TianyiApplication.appCommonBean.getUuid())
                .addParams("spid", standardId)
                .addParams("stid", classId)
                .addParams("num", num)
                .addParams("hunterid", "")
                .addParams("client_type", "A")
                .addParams("sign", sign)
                .build().execute(new StringCallback() {
            @Override
            public void onError(Call call, Exception e, int id) {

            }

            @Override
            public void onResponse(String response, int id) {
                try {
                    JSONObject obj = new JSONObject(response);
                    int code = obj.getInt("code");
                    if (code == 1) {
                        ToastUtils.show("成功加入购物车");
                    } else {
                        ToastUtils.show(obj.getString("msg"));
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        });
    }

}
