package com.yst.onecity.activity.member;

import android.Manifest;
import android.app.Activity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.text.TextUtils;
import android.view.View;
import android.widget.TextView;

import com.amap.api.location.AMapLocation;
import com.google.gson.Gson;
import com.scwang.smartrefresh.layout.SmartRefreshLayout;
import com.scwang.smartrefresh.layout.api.RefreshLayout;
import com.scwang.smartrefresh.layout.listener.OnRefreshLoadmoreListener;
import com.taobao.av.util.StringUtil;
import com.yst.onecity.R;
import com.yst.onecity.TianyiApplication;
import com.yst.onecity.activity.ProductDetailActivity;
import com.yst.onecity.activity.amap.Location;
import com.yst.onecity.activity.login.LoginActivity;
import com.yst.onecity.adapter.ShoppingMonopolyAdapter;
import com.yst.onecity.base.BaseActivity;
import com.yst.onecity.bean.ShoppingLocalityBean;
import com.yst.onecity.bean.product.ProductSortStandardBean;
import com.yst.onecity.config.Const;
import com.yst.onecity.config.Constants;
import com.yst.onecity.fragment.popfragment.AddCartPopFragment;
import com.yst.onecity.fragment.popfragment.ShareCommonDialog;
import com.yst.onecity.utils.JumpIntent;
import com.yst.onecity.utils.MyLog;
import com.yst.onecity.utils.SignUtils;
import com.yst.onecity.utils.ToastUtils;
import com.yst.onecity.utils.Utils;
import com.yst.onecity.view.ContainsEmojiEditText;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.StringCallback;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import butterknife.OnClick;
import okhttp3.Call;
import okhttp3.Request;
import pub.devrel.easypermissions.EasyPermissions;

/**
 * 搜索商品
 *
 * @author Shenxinke
 * @version 4.2.0
 * @data 2018/6/13
 */

public class SearchShoppingActivity extends BaseActivity {
    private ShareCommonDialog mShareCommonDialog;
    private ShoppingMonopolyAdapter shoppingMonopolyAdapter;
    private String locationPermission = Manifest.permission.ACCESS_FINE_LOCATION;
    private List<ShoppingLocalityBean.ContentBean> contentList = new ArrayList<>();
    private int pageNum = 1;
    private int rows = 10;
    private String district;
    private String city;
    private String province;

    @BindView(R.id.smartRefreshLayout)
    SmartRefreshLayout smartRefreshLayout;
    @BindView(R.id.recyclerView)
    RecyclerView rvInformation;
    @BindView(R.id.tv_no_shopping)
    TextView tvNoShopping;
    @BindView(R.id.et_input_content)
    ContainsEmojiEditText etInputContent;
    private String info;

    @Override
    public int bindLayout() {
        return R.layout.activity_search_shopping;
    }

    @Override
    public void initData() {
        getAddres();

        initListener();
    }

    /**
     * 点击事件
     *
     * @param view
     */
    @OnClick({R.id.back, R.id.searchRL})
    public void clickEvent(View view) {
        switch (view.getId()) {
            case R.id.back:
                finish();
                break;
            case R.id.searchRL:
                MyLog.e("aaa", "info___" + info);
                info = etInputContent.getText().toString().trim();
                if (TextUtils.isEmpty(info)) {
                    ToastUtils.show("请输入您要搜索的内容");
                    return;
                }
                contentList.clear();
                pageNum = 1;
                rows = 10;
                getShoppingMallList();
                setShoppingMallAdapter();
                break;
            default:
                break;
        }
    }

    /**
     * 上拉加载下拉刷新
     */
    private void initListener() {
        smartRefreshLayout.setOnRefreshLoadmoreListener(new OnRefreshLoadmoreListener() {
            @Override
            public void onLoadmore(RefreshLayout refreshlayout) {
                pageNum++;
                getShoppingMallList();
                smartRefreshLayout.finishLoadmore(1000);
            }

            @Override
            public void onRefresh(RefreshLayout refreshlayout) {
                pageNum = 1;
                if (contentList != null) {
                    contentList.clear();
                }
                getShoppingMallList();
                smartRefreshLayout.finishRefresh(500);
            }
        });
    }

    /**
     * 获取列表数据
     */
    public void getShoppingMallList() {
        String timestamp = SignUtils.getTimeStamp();
        String sign = Utils.getSign(
                "uuid", TianyiApplication.appCommonBean.getUuid(),
                "phone", TianyiApplication.appCommonBean.getPhone(),
                "info", info,
                "type", Const.STR3,
                "provinceName", province,
                "cityName", city,
                "countyName", district,
                "page", String.valueOf(pageNum),
                "rows", String.valueOf(rows),
                "timestamp", timestamp);
        if (TextUtils.isEmpty(sign)) {
            return;
        }
        OkHttpUtils.post()
                .url(Constants.COMMISSIONER_PRODUCT_LIST)
                .addParams("uuid", TianyiApplication.appCommonBean.getUuid())
                .addParams("phone", TianyiApplication.appCommonBean.getPhone())
                .addParams("info", info)
                .addParams("rows", String.valueOf(rows))
                .addParams("page", String.valueOf(pageNum))
                .addParams("provinceName", province)
                .addParams("cityName", city)
                .addParams("countyName", district)
                .addParams("type", Const.STR3)
                .addParams("client_type", "A")
                .addParams("sign", sign)
                .addParams("timestamp", timestamp)
                .build().execute(new StringCallback() {

            @Override
            public void onError(Call call, Exception e, int id) {
                ToastUtils.show(getString(R.string.tv_net_error));
            }

            @Override
            public void onBefore(Request request, int id) {
                super.onBefore(request, id);
                showInfoProgressDialog();
            }

            @Override
            public void onAfter(int id) {
                super.onAfter(id);
                dismissInfoProgressDialog();
            }

            @Override
            public void onResponse(String response, int id) {
                MyLog.e("sss", "-商城分类列表数据: " + response);
                if (response != null) {
                    ShoppingLocalityBean shoppingMallBean = new Gson().fromJson(response, ShoppingLocalityBean.class);
                    if (shoppingMallBean.getCode() == Const.INTEGER_1) {
                        if (shoppingMallBean.getContent() != null) {
                            List<ShoppingLocalityBean.ContentBean> content = shoppingMallBean.getContent();
                            contentList.addAll(content);
                            shoppingMonopolyAdapter.addList(contentList, Const.INTEGER_1);

                            if (content.size() > Const.INTEGER_0 || contentList.size() > Const.INTEGER_0) {
                                tvNoShopping.setVisibility(View.GONE);
                            } else {
                                tvNoShopping.setVisibility(View.VISIBLE);
                            }
                        }
                    }
                } else {
                    ToastUtils.show(getString(R.string.tv_check_service));
                }
            }
        });
    }

    /**
     * 获取商品规格
     */
    private void getGuige(final String pId, final int position) {
        final String productId = String.valueOf(pId);
        String timestamp = SignUtils.getTimeStamp();
        String sign = Utils.getSign("timestamp", timestamp,
                "pId", productId, "merchantid", Const.STR1);
        OkHttpUtils.post().url(Constants.GET_PRODUCT_SORT_STANDARD)
                .addParams("timestamp", timestamp)
                .addParams("pId", productId)
                .addParams("merchantid", Const.STR1)
                .addParams("client_type", "A")
                .addParams("sign", sign)
                .build().execute(new StringCallback() {
            @Override
            public void onError(Call call, Exception e, int id) {

            }

            @Override
            public void onResponse(String response, int id) {
                MyLog.e("sss", "-规格：" + response);
                if (response != null) {
                    ProductSortStandardBean standardBean = new Gson().fromJson(response, ProductSortStandardBean.class);
                    if (null != standardBean.getContent() && standardBean.getCode() == Const.INTEGER_1) {
                        if (standardBean.getContent().getStandard().size() > 1) {
                            showAddCartDialog(productId, Const.STR1);
                        } else {
                            int standardId = standardBean.getContent().getStandard().get(0).getStandardId();
                            int classId = standardBean.getContent().getClassify().get(0).getClassId();
                            int kuNum = standardBean.getContent().getStandard().get(0).getKuNum();
                            addCart(Const.STR1, String.valueOf(standardId), String.valueOf(classId));
                        }
                    }
                } else {
                    ToastUtils.show(getString(R.string.tv_check_service));
                }
            }
        });
    }

    /**
     * 显示购物车弹框
     *
     * @param productId  商品id
     * @param merchantId merchantId
     */
    private void showAddCartDialog(String productId, String merchantId) {
        AddCartPopFragment popFragment = AddCartPopFragment.newInstance(productId, merchantId, "", "", "", "", "", "", "");
        popFragment.show(getSupportFragmentManager(), "goodsFragment");
    }

    /**
     * 添加购物车
     */
    private void addCart(String num, String standardId, String classId) {
        String timestamp = SignUtils.getTimeStamp();
        String sign = Utils.getSign("timestamp", timestamp,
                "phone", TianyiApplication.appCommonBean.getPhone()
                , "uuid", TianyiApplication.appCommonBean.getUuid(),
                "spid", standardId,
                "stid", classId,
                "num", num,
                "hunterid", "");
        OkHttpUtils.post().url(Constants.ADD_SHOP_CART)
                .addParams("timestamp", timestamp)
                .addParams("phone", TianyiApplication.appCommonBean.getPhone())
                .addParams("uuid", TianyiApplication.appCommonBean.getUuid())
                .addParams("spid", standardId)
                .addParams("stid", classId)
                .addParams("num", num)
                .addParams("hunterid", "")
                .addParams("client_type", "A")
                .addParams("sign", sign)
                .build().execute(new StringCallback() {
            @Override
            public void onError(Call call, Exception e, int id) {

            }

            @Override
            public void onResponse(String response, int id) {
                try {
                    JSONObject obj = new JSONObject(response);
                    int code = obj.getInt("code");
                    if (code == 1) {
                        ToastUtils.show("成功加入购物车");
                    } else {
                        ToastUtils.show(obj.getString("msg"));
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        });
    }

    /**
     * 定位
     */
    private void startLocation() {
        if (EasyPermissions.hasPermissions(SearchShoppingActivity.this, locationPermission)) {
            //启动定位
            new Location(locationCallback).startLocation();
        } else {
            EasyPermissions.requestPermissions(this, "请打开定位权限", 100, locationPermission);
        }
    }

    Location.LocationCallback locationCallback = new Location.LocationCallback() {

        @Override
        public void locSuccess(AMapLocation amapLocation) {
            if (amapLocation.getAoiName() == null || "".equals(amapLocation.getAoiName())) {
                ToastUtils.show("定位失败");
            } else {
                province = amapLocation.getProvince();
                city = amapLocation.getCity();
                district = amapLocation.getDistrict();
            }
        }

        @Override
        public void locFailure(int code, String errorInfo) {
            ToastUtils.show("定位失败");
        }
    };


    /**
     * 绑定搜索商品适配器
     */
    private void setShoppingMallAdapter() {
        rvInformation.setLayoutManager(new LinearLayoutManager(SearchShoppingActivity.this,
                LinearLayoutManager.VERTICAL, false));
        shoppingMonopolyAdapter = new ShoppingMonopolyAdapter();
        rvInformation.setAdapter(shoppingMonopolyAdapter);
        shoppingMonopolyAdapter.ShoppingMonopolyAdapter(new ShoppingMonopolyAdapter.ShoppingMonopolyListener() {
            @Override
            public void btShoppingCart(int position, String status) {
                if (!TianyiApplication.isLogin) {
                    JumpIntent.jump((Activity) context, LoginActivity.class);
                    return;
                }
                if (Utils.isClickable()) {
                    getGuige(status, position);
                }
            }

            @Override
            public void btShoppingStory(int position, String status) {
                Bundle bundle = new Bundle();
                bundle.putString("productId", String.valueOf(contentList.get(position).getId()));
                bundle.putInt(Const.STR_STORY_INTENT,Const.INTEGER_3);
                JumpIntent.jump(SearchShoppingActivity.this,ProductDetailActivity.class,bundle);
            }

            @Override
            public void onItemClick(int position) {
                Bundle bundle = new Bundle();
                bundle.putString("productId", String.valueOf(contentList.get(position).getId()));
                JumpIntent.jump(SearchShoppingActivity.this, ProductDetailActivity.class, bundle);
            }
        });
    }

    /**
     * 获取位置信息
     */
    /**
     * 获取定位信息
     */
    public void getAddres() {
        if(StringUtil.isEmpty(Const.HOME_ADDRES)){
            startLocation();
        }else {
            province = TianyiApplication.appCommonBean.getProvinceName();
            city = TianyiApplication.appCommonBean.getCityName();
            district = TianyiApplication.appCommonBean.getCountyName();
        }
    }
}
